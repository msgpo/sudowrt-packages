#!/bin/sh /etc/rc.common

START=91

# Location of notdhcpserver binary
SERVER_PATH=/usr/bin/notdhcpserver

# Where to write PID file
PIDFILE=/var/run/notdhcpserver.pid

# Arguments to pass to server
# You can add -v to make it more verbose
SERVER_ARGS="-v"

config_cb() {
##TODO: This could get called multiple times if there were multiple config sections in /etc/config/notdhcpserver
	local cfg="$CONFIG_SECTION"
  local type="$1"
  local name="$2"
	case "$type" in
		server)
			config_get_bool enabled "$cfg" enabled 1
			config_get addresses "$cfg" address
			config_get HOOK_SCRIPT "$cfg" hook_script
			config_get SSL_CERT "$cfg" ssl_cert
			config_get SSL_KEY "$cfg" ssl_key
			
			[ $enabled -eq 0 ] && return

			local IFACES=""
			for address in $addresses; do
			  append IFACES "${address}" " "
			done

			echo "Starting notdhcpserver"
      /sbin/start-stop-daemon --start --make-pidfile --pidfile $PIDFILE --background --startas /bin/sh -- "exec $SERVER_PATH $SERVER_ARGS -c $SSL_CERT -k $SSL_KEY -s $HOOK_SCRIPT $IFACES &> logger"

		;;
	esac
}

start() {
	config_load notdhcpserver
}

stop() {
  PID="$(cat ${PIDFILE})"
  echo "Stopping notdhcpserver"
  start-stop-daemon -K -q -p $PIDFILE 
  while test -d "/proc/${PID}"; do
    echo "  waiting for notdhcpserver to stop"
    sleep 1
  done 
  echo "  notdhcpserver stopped"
}

restart() {
	stop
	start
}

